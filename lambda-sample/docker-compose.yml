services:
  lambda-sample:
    build: .
    container_name: employee
    restart: unless-stopped
    depends_on:
      - dynamodb-local
    ports:
      - "${SERVER_PORT}:8000"
    env_file:
      - .env
      
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: employee-database-dynamo
    restart: unless-stopped
    ports:
      - "8001:8000"
    volumes:
      - dynamodb_data:/home/dynamodblocal/data
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ."

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686" 
      - "14268:14268"
      - "6831:6831/udp"
      - "4317:4317"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
        
volumes:
  dynamodb_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local